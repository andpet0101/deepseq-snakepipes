try:
	GENERAL_SETTINGS_INCLUDED
except NameError: 
	include: "general_settings.snakemake"

import socket


####################
# Config/Parameter #
####################
CELLRANGER_CFG = config.get("cellranger",dict())

# info about cellranger is needed
if not CELLRANGER_CFG:
	raise WorkflowError("Please provide an cellranger configuration!")

if "reference_dir" not in CELLRANGER_CFG:
	if SPECIES and ANNOTATION_CFG and "version" in ANNOTATION_CFG and REFERENCE_CFG and "version" in REFERENCE_CFG and os.path.exists("/projects/seq-work/user/pipeline/cellranger/"+SPECIES+"/"+REFERENCE_CFG["version"]+".e"+ANNOTATION_CFG["version"]):
		CELLRANGER_CFG['reference_dir'] = "/projects/seq-work/user/pipeline/cellranger/"+SPECIES+"/"+REFERENCE_CFG["version"]+".e"+ANNOTATION_CFG["version"]
	else:
		raise WorkflowError("Please provide a cellranger reference directory either built-in via annotation.version plus reference.version plus species or via cellranger.reference_dir!")

if not os.path.exists(CELLRANGER_CFG['reference_dir']):
	raise WorkflowError("Could not find the cellranger reference directory!")

# cellranger version - export if in config otherwise use latest version
if PROGRAM_CFG and "cellranger" in PROGRAM_CFG:
	os.environ["CELLRANGER_VERSION"] = PROGRAM_CFG["cellranger"]

###########
# Targets #
###########

CELLRANGER_FASTQ = []
for l in LIBRARIES:
	lc = re.sub("(^L\d+)_(\S+)","\\2_\\1",l)
	CELLRANGER_FASTQ.append("cellranger/fastq/"+lc+"_L001_R1_001.fastq.gz")
	CELLRANGER_FASTQ.append("cellranger/fastq/"+lc+"_L001_R2_001.fastq.gz")
	CELLRANGER_FASTQ.append("cellranger/fastq/"+lc+"_L001_I1_001.fastq.gz")

#########
# Rules #
#########

shell.prefix("set -ef -o pipefail;")

localrules: run_cellranger_count,run_cellranger_aggregate

rule do_all:
	input:
		"cellranger/all/cellranger_aggregate.done" if len(SAMPLES)>1 else "cellranger/"+SAMPLES[0]+"/cellranger_count.done"

# runs cellranger aggr
rule run_cellranger_aggregate:
	input:
		csv="cellranger/aggregate_samples.csv",
		cell=["cellranger/"+s+"/cellranger_count.done" for s in SAMPLES]
	output:
		"cellranger/all/cellranger_aggregate.done"
	log:
		"cellranger/log/all.cellranger_aggregate.log"
	shell:
		"""
		(rm -r cellranger/all
		if [[ "$(hostname)" == "login-0-0.local" ]] ;then jobmode="sge"; else jobmode="local";fi
		
		cd cellranger && run_cellranger aggr --id=all --csv=aggregate_samples.csv --normalize=mapped --jobmode=$jobmode) >& {log}
		touch {output}
		"""

# prepares a csv for aggregating multiple cellranger runs
rule prepare_cellranger_aggregate_csv:
	output:
		"cellranger/aggregate_samples.csv"
	run:
		with open(output[0], 'w') as out:
			out.write("library_id,molecule_h5\n")
			for s in SAMPLES:
				out.write(s+","+s+"/outs/molecule_info.h5\n")


# runs cellranger count
rule run_cellranger_count:
	input:
		"cellranger/fastq/all_fastqs_prepared.done"
	output:
		"cellranger/{sample}/cellranger_count.done"
	log:
		"cellranger/log/{sample}.cellranger_count.log"
	params:
		cellranger_ref = CELLRANGER_CFG['reference_dir']
	shell:
		"""
		(rm -r cellranger/{wildcards.sample}
		if [[ "$(hostname)" == "login-0-0.local" ]] ;then jobmode="sge"; else jobmode="local";fi
		cd cellranger && run_cellranger count --id={wildcards.sample} --fastqs=fastq/ --sample={wildcards.sample} --description={wildcards.sample} --transcriptome={params.cellranger_ref} --jobmode=$jobmode) >& {log}
		touch {output}
		"""


# checks if all fastq files were prepared properly
rule fastqs_prepared_for_cellranger:
	input: CELLRANGER_FASTQ
	output: "cellranger/fastq/all_fastqs_prepared.done"
	shell: "touch {output}"

# prepares fastq files for cellranger
#
# 1. R1 and R2 were obtained from the labweb
# 2. R1 and R2 are renamed/linked according cellranger required file_pattern: %s_*_L[0-9][0-9][0-9]_%s_[0-9][0-9][0-9].fastq* (first %s = sample, second %s = read)
# 3. an I1 file is created which contains the sample index (needed by cellranger)
#
# important: datasets with same sample but different library names are aggregated
rule prepare_fastq_for_cellranger:
	input:
		r1="fastq/{libid}_{sample}_R1.fastq.gz",
		r2="fastq/{libid}_{sample}_R2.fastq.gz"
	output:
		r1="cellranger/fastq/{sample}_{libid}_L001_R1_001.fastq.gz",
		r2="cellranger/fastq/{sample}_{libid}_L001_R2_001.fastq.gz",
		i1="cellranger/fastq/{sample}_{libid}_L001_I1_001.fastq.gz"
	log:
		"cellranger/log/{sample}_{libid}.prepare_fastq_for_cellranger.log"
	shell:
		"""
		(ln -fs ../../{input.r1} {output.r1}
		ln -fs ../../{input.r2} {output.r2}
		zcat  {output.r1} | gawk 'BEGIN{{FS=":"}}{{if(NR%4==1){{bc=$10;qc=gensub(/./,"A","g",bc)}} if(NR%4==2){{print bc;}}else if(NR%4==0){{print qc}} else{{print;}}}}' | gzip -c > {output.i1}) >& {log}
		"""
	
